[{"C:\\Incubator\\Todolist\\todolist\\src\\reportWebVitals.ts":"1","C:\\Incubator\\Todolist\\todolist\\src\\App.tsx":"2","C:\\Incubator\\Todolist\\todolist\\src\\index.tsx":"3","C:\\Incubator\\Todolist\\todolist\\src\\redux\\todolists-reducer.ts":"4","C:\\Incubator\\Todolist\\todolist\\src\\api\\todolosts-api.ts":"5","C:\\Incubator\\Todolist\\todolist\\src\\Task\\Task.tsx":"6","C:\\Incubator\\Todolist\\todolist\\src\\Todolist\\Todolist.tsx":"7","C:\\Incubator\\Todolist\\todolist\\src\\redux\\redux-store.ts":"8","C:\\Incubator\\Todolist\\todolist\\src\\redux\\tasks-reducer.ts":"9"},{"size":425,"mtime":1606727322450,"results":"10","hashOfConfig":"11"},{"size":1199,"mtime":1609352768702,"results":"12","hashOfConfig":"11"},{"size":588,"mtime":1609352769257,"results":"13","hashOfConfig":"11"},{"size":923,"mtime":1609181751791,"results":"14","hashOfConfig":"11"},{"size":525,"mtime":1609182086478,"results":"15","hashOfConfig":"11"},{"size":1212,"mtime":1609522869821,"results":"16","hashOfConfig":"11"},{"size":1169,"mtime":1609522818960,"results":"17","hashOfConfig":"11"},{"size":489,"mtime":1609181696584,"results":"18","hashOfConfig":"11"},{"size":1864,"mtime":1609522704078,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"18sljh3",{"filePath":"22","messages":"23","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Incubator\\Todolist\\todolist\\src\\reportWebVitals.ts",[],"C:\\Incubator\\Todolist\\todolist\\src\\App.tsx",["40","41","42","43"],"import React, {useEffect} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport './App.css';\nimport {tasksAPI, todolistsAPI} from './api/todolosts-api';\nimport {Task, TaskType} from './Task/Task';\nimport {Todolist, TodolistType} from './Todolist/Todolist';\nimport {fetchTodolists} from './redux/todolists-reducer';\nimport {AppRootStateType} from './redux/redux-store';\nimport {TasksStateType} from './redux/tasks-reducer';\n\nconst App = () => {\n    const dispatch = useDispatch()\n\n    let todolists = useSelector<AppRootStateType, Array<TodolistType>>(state => state.todolists)\n    let tasks = useSelector<AppRootStateType, TasksStateType>(state => state.tasks)\n\n    useEffect(() => {\n        dispatch(fetchTodolists())\n    }, [dispatch])\n\n\n    return (\n        <div className=\"App\">\n            <div>\n                {\n                    todolists.map((tl) => {\n                        let allTodolistTasks = tasks[tl.id]\n\n                        return (\n                            <Todolist key={tl.id} id={tl.id} title={tl.title} tasks={allTodolistTasks}/>\n                        )\n                    })}\n            </div>\n\n\n        </div>\n    );\n}\n\nexport default App;\n",["44","45"],"C:\\Incubator\\Todolist\\todolist\\src\\index.tsx",[],"C:\\Incubator\\Todolist\\todolist\\src\\redux\\todolists-reducer.ts",[],"C:\\Incubator\\Todolist\\todolist\\src\\api\\todolosts-api.ts",[],"C:\\Incubator\\Todolist\\todolist\\src\\Task\\Task.tsx",[],"C:\\Incubator\\Todolist\\todolist\\src\\Todolist\\Todolist.tsx",[],"C:\\Incubator\\Todolist\\todolist\\src\\redux\\redux-store.ts",[],"C:\\Incubator\\Todolist\\todolist\\src\\redux\\tasks-reducer.ts",["46"],{"ruleId":"47","severity":1,"message":"48","line":4,"column":9,"nodeType":"49","messageId":"50","endLine":4,"endColumn":17},{"ruleId":"47","severity":1,"message":"51","line":4,"column":19,"nodeType":"49","messageId":"50","endLine":4,"endColumn":31},{"ruleId":"47","severity":1,"message":"52","line":5,"column":9,"nodeType":"49","messageId":"50","endLine":5,"endColumn":13},{"ruleId":"47","severity":1,"message":"53","line":5,"column":15,"nodeType":"49","messageId":"50","endLine":5,"endColumn":23},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":34,"column":53,"nodeType":"60","messageId":"61","endLine":34,"endColumn":55},"@typescript-eslint/no-unused-vars","'tasksAPI' is defined but never used.","Identifier","unusedVar","'todolistsAPI' is defined but never used.","'Task' is defined but never used.","'TaskType' is defined but never used.","no-native-reassign",["62"],"no-negated-in-lhs",["63"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]
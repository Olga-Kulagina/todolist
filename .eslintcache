[{"C:\\Incubator\\Todolist\\todolist\\src\\reportWebVitals.ts":"1","C:\\Incubator\\Todolist\\todolist\\src\\App.tsx":"2","C:\\Incubator\\Todolist\\todolist\\src\\index.tsx":"3","C:\\Incubator\\Todolist\\todolist\\src\\redux\\todolists-reducer.ts":"4","C:\\Incubator\\Todolist\\todolist\\src\\api\\todolosts-api.ts":"5","C:\\Incubator\\Todolist\\todolist\\src\\Task\\Task.tsx":"6","C:\\Incubator\\Todolist\\todolist\\src\\Todolist\\Todolist.tsx":"7","C:\\Incubator\\Todolist\\todolist\\src\\redux\\redux-store.ts":"8","C:\\Incubator\\Todolist\\todolist\\src\\redux\\tasks-reducer.ts":"9","C:\\Incubator\\Todolist\\todolist\\src\\common\\AddItemForm\\AddItemForm.tsx":"10"},{"size":425,"mtime":1606727322450,"results":"11","hashOfConfig":"12"},{"size":1685,"mtime":1609586801874,"results":"13","hashOfConfig":"12"},{"size":588,"mtime":1609352769257,"results":"14","hashOfConfig":"12"},{"size":1810,"mtime":1609593785167,"results":"15","hashOfConfig":"12"},{"size":769,"mtime":1609591458700,"results":"16","hashOfConfig":"12"},{"size":1138,"mtime":1609525789100,"results":"17","hashOfConfig":"12"},{"size":1261,"mtime":1609582833636,"results":"18","hashOfConfig":"12"},{"size":489,"mtime":1609181696584,"results":"19","hashOfConfig":"12"},{"size":2373,"mtime":1609591849139,"results":"20","hashOfConfig":"12"},{"size":652,"mtime":1609583130467,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"18sljh3",{"filePath":"24","messages":"25","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Incubator\\Todolist\\todolist\\src\\reportWebVitals.ts",[],"C:\\Incubator\\Todolist\\todolist\\src\\App.tsx",["44","45","46","47"],"import React, {useCallback, useEffect} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport './App.css';\nimport {tasksAPI, todolistsAPI} from './api/todolosts-api';\nimport {Task, TaskType} from './Task/Task';\nimport {Todolist, TodolistType} from './Todolist/Todolist';\nimport {addTodolist, fetchTodolists} from './redux/todolists-reducer';\nimport {AppRootStateType} from './redux/redux-store';\nimport {deleteTaskTC, TasksStateType} from './redux/tasks-reducer';\nimport {AddItemForm} from './common/AddItemForm/AddItemForm';\n\nconst App = () => {\n    const dispatch = useDispatch()\n\n    let todolists = useSelector<AppRootStateType, Array<TodolistType>>(state => state.todolists)\n    let tasks = useSelector<AppRootStateType, TasksStateType>(state => state.tasks)\n\n    useEffect(() => {\n        dispatch(fetchTodolists())\n    }, [dispatch])\n\n    const deleteTask = useCallback((taskId: string, todolistId: string) => {\n        dispatch(deleteTaskTC(taskId, todolistId))\n    }, [dispatch])\n\n    const addNewTodolist = useCallback((title: string) => {\n        dispatch(addTodolist(title))\n    }, [dispatch])\n\n\n    return (\n        <div className=\"App\">\n            <div>\n                <AddItemForm callback={addNewTodolist}/>\n                {\n                    todolists.map((tl) => {\n                        let allTodolistTasks = tasks[tl.id]\n\n                        return (\n                            <Todolist key={tl.id} id={tl.id} title={tl.title} tasks={allTodolistTasks}\n                                      deleteTask={deleteTask}/>\n                        )\n                    })}\n            </div>\n\n\n        </div>\n    );\n}\n\nexport default App;\n",["48","49"],"C:\\Incubator\\Todolist\\todolist\\src\\index.tsx",[],"C:\\Incubator\\Todolist\\todolist\\src\\redux\\todolists-reducer.ts",[],"C:\\Incubator\\Todolist\\todolist\\src\\api\\todolosts-api.ts",[],"C:\\Incubator\\Todolist\\todolist\\src\\Task\\Task.tsx",[],"C:\\Incubator\\Todolist\\todolist\\src\\Todolist\\Todolist.tsx",[],"C:\\Incubator\\Todolist\\todolist\\src\\redux\\redux-store.ts",[],"C:\\Incubator\\Todolist\\todolist\\src\\redux\\tasks-reducer.ts",[],"C:\\Incubator\\Todolist\\todolist\\src\\common\\AddItemForm\\AddItemForm.tsx",[],{"ruleId":"50","severity":1,"message":"51","line":4,"column":9,"nodeType":"52","messageId":"53","endLine":4,"endColumn":17},{"ruleId":"50","severity":1,"message":"54","line":4,"column":19,"nodeType":"52","messageId":"53","endLine":4,"endColumn":31},{"ruleId":"50","severity":1,"message":"55","line":5,"column":9,"nodeType":"52","messageId":"53","endLine":5,"endColumn":13},{"ruleId":"50","severity":1,"message":"56","line":5,"column":15,"nodeType":"52","messageId":"53","endLine":5,"endColumn":23},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},"@typescript-eslint/no-unused-vars","'tasksAPI' is defined but never used.","Identifier","unusedVar","'todolistsAPI' is defined but never used.","'Task' is defined but never used.","'TaskType' is defined but never used.","no-native-reassign",["61"],"no-negated-in-lhs",["62"],"no-global-assign","no-unsafe-negation"]
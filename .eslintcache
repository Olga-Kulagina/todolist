[{"C:\\Incubator\\Todolist\\todolist\\src\\reportWebVitals.ts":"1","C:\\Incubator\\Todolist\\todolist\\src\\App.tsx":"2","C:\\Incubator\\Todolist\\todolist\\src\\index.tsx":"3","C:\\Incubator\\Todolist\\todolist\\src\\redux\\todolists-reducer.ts":"4","C:\\Incubator\\Todolist\\todolist\\src\\api\\todolosts-api.ts":"5","C:\\Incubator\\Todolist\\todolist\\src\\Task\\Task.tsx":"6","C:\\Incubator\\Todolist\\todolist\\src\\Todolist\\Todolist.tsx":"7","C:\\Incubator\\Todolist\\todolist\\src\\redux\\redux-store.ts":"8","C:\\Incubator\\Todolist\\todolist\\src\\redux\\tasks-reducer.ts":"9","C:\\Incubator\\Todolist\\todolist\\src\\common\\AddItemForm\\AddItemForm.tsx":"10","C:\\Incubator\\Todolist\\todolist\\src\\Todolists\\Todolists.tsx":"11","C:\\Incubator\\Todolist\\todolist\\src\\Login\\Login.tsx":"12","C:\\Incubator\\Todolist\\todolist\\src\\Error404\\Error404.tsx":"13","C:\\Incubator\\Todolist\\todolist\\src\\redux\\auth-reducer.ts":"14","C:\\Incubator\\Todolist\\todolist\\src\\redux\\app-reducer.ts":"15"},{"size":425,"mtime":1606727322450,"results":"16","hashOfConfig":"17"},{"size":2369,"mtime":1612940898097,"results":"18","hashOfConfig":"17"},{"size":709,"mtime":1612349695644,"results":"19","hashOfConfig":"17"},{"size":2454,"mtime":1609670152576,"results":"20","hashOfConfig":"17"},{"size":2258,"mtime":1612450817510,"results":"21","hashOfConfig":"17"},{"size":1851,"mtime":1612198988018,"results":"22","hashOfConfig":"17"},{"size":3221,"mtime":1612897044963,"results":"23","hashOfConfig":"17"},{"size":623,"mtime":1612450568988,"results":"24","hashOfConfig":"17"},{"size":4877,"mtime":1612202023978,"results":"25","hashOfConfig":"17"},{"size":1174,"mtime":1612897061590,"results":"26","hashOfConfig":"17"},{"size":2992,"mtime":1612897419790,"results":"27","hashOfConfig":"17"},{"size":2794,"mtime":1612896490332,"results":"28","hashOfConfig":"17"},{"size":497,"mtime":1612941272977,"results":"29","hashOfConfig":"17"},{"size":1306,"mtime":1612450014895,"results":"30","hashOfConfig":"17"},{"size":1098,"mtime":1612451406987,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"18sljh3",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"C:\\Incubator\\Todolist\\todolist\\src\\reportWebVitals.ts",[],["67","68"],"C:\\Incubator\\Todolist\\todolist\\src\\App.tsx",[],"C:\\Incubator\\Todolist\\todolist\\src\\index.tsx",[],["69","70"],"C:\\Incubator\\Todolist\\todolist\\src\\redux\\todolists-reducer.ts",[],"C:\\Incubator\\Todolist\\todolist\\src\\api\\todolosts-api.ts",[],"C:\\Incubator\\Todolist\\todolist\\src\\Task\\Task.tsx",[],"C:\\Incubator\\Todolist\\todolist\\src\\Todolist\\Todolist.tsx",[],"C:\\Incubator\\Todolist\\todolist\\src\\redux\\redux-store.ts",[],["71","72"],"C:\\Incubator\\Todolist\\todolist\\src\\redux\\tasks-reducer.ts",[],"C:\\Incubator\\Todolist\\todolist\\src\\common\\AddItemForm\\AddItemForm.tsx",[],"C:\\Incubator\\Todolist\\todolist\\src\\Todolists\\Todolists.tsx",["73"],"import React, {useCallback, useEffect, useState} from 'react';\r\nimport s from '../App.module.css';\r\nimport {AddItemForm} from '../common/AddItemForm/AddItemForm';\r\nimport {Col, Row} from 'antd';\r\nimport {Todolist, TodolistType} from '../Todolist/Todolist';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../redux/redux-store';\r\nimport {addTaskTC, changeTaskStatusTC, deleteTaskTC, TasksStateType} from '../redux/tasks-reducer';\r\nimport {addTodolistTC, fetchTodolistsTC, removeTodolistTC} from '../redux/todolists-reducer';\r\nimport {TaskStatus} from '../Task/Task';\r\nimport {PATH} from '../App';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\n\r\n\r\nexport const Todolists = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchTodolistsTC())\r\n    }, [dispatch])\r\n\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoggedIn)\r\n    let todolists = useSelector<AppRootStateType, Array<TodolistType>>(state => state.todolists)\r\n    let tasks = useSelector<AppRootStateType, TasksStateType>(state => state.tasks)\r\n\r\n    const removeTask = useCallback((taskId: string, todolistId: string) => {\r\n        dispatch(deleteTaskTC(taskId, todolistId))\r\n    }, [dispatch])\r\n\r\n    const addNewTodolist = useCallback((title: string) => {\r\n        dispatch(addTodolistTC(title))\r\n    }, [dispatch])\r\n\r\n    const addTask = useCallback((title: string, todolistId: string) => {\r\n        dispatch(addTaskTC(title, todolistId))\r\n    }, [dispatch])\r\n\r\n    const removeTodolist = useCallback((todolistId: string) => {\r\n        dispatch(removeTodolistTC(todolistId))\r\n    }, [dispatch])\r\n\r\n    const changeTaskStatus = useCallback((status: TaskStatus, todolistId: string, taskId: string) => {\r\n        dispatch(changeTaskStatusTC(status, todolistId, taskId))\r\n    }, [dispatch])\r\n\r\n    if(!isLoggedIn) {\r\n        return <Redirect to={PATH.LOGIN}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.addNewTodo}>\r\n                <AddItemForm callback={addNewTodolist}/>\r\n            </div>\r\n            <div className=\"site-card-wrapper\">\r\n                <Row justify='center' gutter={16}>\r\n                    {\r\n                        todolists.map((tl) => {\r\n                            let allTodolistTasks = tasks[tl.id]\r\n\r\n                            return (\r\n                                <Col xs={22} sm={12} md={10} lg={8} xl={6} xxl={6}>\r\n                                    <Todolist key={tl.id} id={tl.id} title={tl.title}\r\n                                              tasks={allTodolistTasks}\r\n                                              deleteTask={removeTask} removeTodolist={removeTodolist}\r\n                                              addTask={addTask} changeTaskStatus={changeTaskStatus}/>\r\n                                </Col>\r\n                            )\r\n                        })}\r\n                </Row>\r\n            </div>\r\n        </div>\r\n    )\r\n}",["74","75"],"C:\\Incubator\\Todolist\\todolist\\src\\Login\\Login.tsx",[],"C:\\Incubator\\Todolist\\todolist\\src\\Error404\\Error404.tsx",[],"C:\\Incubator\\Todolist\\todolist\\src\\redux\\auth-reducer.ts",[],"C:\\Incubator\\Todolist\\todolist\\src\\redux\\app-reducer.ts",[],{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"76","replacedBy":"80"},{"ruleId":"78","replacedBy":"81"},{"ruleId":"76","replacedBy":"82"},{"ruleId":"78","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":1,"column":40,"nodeType":"86","messageId":"87","endLine":1,"endColumn":48},{"ruleId":"76","replacedBy":"88"},{"ruleId":"78","replacedBy":"89"},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],["90"],["91"],["90"],["91"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar",["90"],["91"],"no-global-assign","no-unsafe-negation"]